[
  {
    "line": 2,
    "elements": [
      {
        "line": 4,
        "name": "",
        "description": "",
        "type": "background",
        "keyword": "Background",
        "steps": [
          {
            "result": {
              "duration": 11714168300,
              "status": "passed"
            },
            "line": 5,
            "name": "navigate to URL \"https://drysign-dev.exela.global/#/\"",
            "match": {
              "arguments": [
                {
                  "val": "\"https://drysign-dev.exela.global/#/\"",
                  "offset": 16
                }
              ],
              "location": "USAMobileNoMandate.navigate_to_URL(String)"
            },
            "after": [
              {
                "result": {
                  "duration": 14052900,
                  "status": "passed"
                },
                "match": {
                  "location": "Base.waitToPageRender(Scenario)"
                }
              }
            ],
            "keyword": "Given "
          }
        ]
      },
      {
        "start_timestamp": "2022-09-30T12:23:46.140Z",
        "before": [
          {
            "result": {
              "duration": 7958336600,
              "status": "passed"
            },
            "match": {
              "location": "Base.BrowsersetUp(Scenario)"
            }
          }
        ],
        "line": 78,
        "name": "To Verify Subscribed Register user is able to Purchase the higher plan then the exisiting plan successfully through Upgrade Plan button present on View Plan pop-up",
        "description": "",
        "id": "to-verify-dashboard;to-verify-subscribed-register-user-is-able-to-purchase-the-higher-plan-then-the-exisiting-plan-successfully-through-upgrade-plan-button-present-on-view-plan-pop-up",
        "after": [
          {
            "embeddings": [
              {
                "data": "",
                "mime_type": "image/png"
              }
            ],
            "result": {
              "duration": 1459800500,
              "status": "passed"
            },
            "match": {
              "location": "Base.closeBrowser(Scenario)"
            }
          }
        ],
        "type": "scenario",
        "keyword": "Scenario",
        "steps": [
          {
            "result": {
              "duration": 5278822700,
              "status": "passed"
            },
            "line": 79,
            "name": "enter the user name as \"sid06@mailinator.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sid06@mailinator.com\"",
                  "offset": 23
                }
              ],
              "location": "USAMobileNoMandate.enter_the_user_name_as(String)"
            },
            "after": [
              {
                "result": {
                  "duration": 6346400,
                  "status": "passed"
                },
                "match": {
                  "location": "Base.waitToPageRender(Scenario)"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 133773100,
              "status": "passed"
            },
            "line": 80,
            "name": "enter the password as\"Malin@555\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Malin@555\"",
                  "offset": 21
                }
              ],
              "location": "USAMobileNoMandate.enter_the_password_as(String)"
            },
            "after": [
              {
                "result": {
                  "duration": 4160300,
                  "status": "passed"
                },
                "match": {
                  "location": "Base.waitToPageRender(Scenario)"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 232069900,
              "status": "passed"
            },
            "line": 81,
            "name": "user click on the Login button",
            "match": {
              "location": "AutoRenewal.user_click_on_the_Login_button()"
            },
            "after": [
              {
                "result": {
                  "duration": 5820700,
                  "status": "passed"
                },
                "match": {
                  "location": "Base.waitToPageRender(Scenario)"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 14227794300,
              "status": "passed"
            },
            "line": 101,
            "name": "user Click On upgrade plan button",
            "match": {
              "location": "USAMobileNoMandate.user_Click_On_upgrade_plan_button()"
            },
            "after": [
              {
                "result": {
                  "duration": 7017200,
                  "status": "passed"
                },
                "match": {
                  "location": "Base.waitToPageRender(Scenario)"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 7500207600,
              "status": "passed"
            },
            "line": 102,
            "name": "user click on the BuyNow button",
            "match": {
              "location": "USAMobileNoMandate.user_click_on_the_BuyNow_button()"
            },
            "after": [
              {
                "result": {
                  "duration": 6204800,
                  "status": "passed"
                },
                "match": {
                  "location": "Base.waitToPageRender(Scenario)"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 15032286200,
              "status": "passed"
            },
            "line": 103,
            "name": "user navigate to payment page",
            "match": {
              "location": "USAMobileNoMandate.user_navigate_to_payment_page()"
            },
            "after": [
              {
                "result": {
                  "duration": 15027300,
                  "status": "passed"
                },
                "match": {
                  "location": "Base.waitToPageRender(Scenario)"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 310575500,
              "status": "passed"
            },
            "line": 104,
            "name": "user enter name of the card as \"Test\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Test\"",
                  "offset": 31
                }
              ],
              "location": "USAMobileNoMandate.user_enter_name_of_the_card_as(String)"
            },
            "after": [
              {
                "result": {
                  "duration": 4629700,
                  "status": "passed"
                },
                "match": {
                  "location": "Base.waitToPageRender(Scenario)"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 273220100,
              "status": "passed"
            },
            "line": 105,
            "name": "enter card number as \"4242424242424242\"",
            "match": {
              "arguments": [
                {
                  "val": "\"4242424242424242\"",
                  "offset": 21
                }
              ],
              "location": "USAMobileNoMandate.enter_card_number_as(String)"
            },
            "after": [
              {
                "result": {
                  "duration": 4612600,
                  "status": "passed"
                },
                "match": {
                  "location": "Base.waitToPageRender(Scenario)"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 219010900,
              "status": "passed"
            },
            "line": 106,
            "name": "enter expire month as \"07\"",
            "match": {
              "arguments": [
                {
                  "val": "\"07\"",
                  "offset": 22
                }
              ],
              "location": "USAMobileNoMandate.enter_expire_month_as(String)"
            },
            "after": [
              {
                "result": {
                  "duration": 3740900,
                  "status": "passed"
                },
                "match": {
                  "location": "Base.waitToPageRender(Scenario)"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 214106600,
              "status": "passed"
            },
            "line": 107,
            "name": "enter expire year as \"27\"",
            "match": {
              "arguments": [
                {
                  "val": "\"27\"",
                  "offset": 21
                }
              ],
              "location": "USAMobileNoMandate.enter_expire_year_as(String)"
            },
            "after": [
              {
                "result": {
                  "duration": 4418900,
                  "status": "passed"
                },
                "match": {
                  "location": "Base.waitToPageRender(Scenario)"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 230267900,
              "status": "passed"
            },
            "line": 108,
            "name": "enter cvv nunber as \"789\"",
            "match": {
              "arguments": [
                {
                  "val": "\"789\"",
                  "offset": 20
                }
              ],
              "location": "USAMobileNoMandate.enter_cvv_nunber_as(String)"
            },
            "after": [
              {
                "result": {
                  "duration": 23312300,
                  "status": "passed"
                },
                "match": {
                  "location": "Base.waitToPageRender(Scenario)"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 2249234400,
              "status": "passed"
            },
            "line": 109,
            "name": "user click on pay button",
            "match": {
              "location": "USAMobileNoMandate.user_click_on_pay_button()"
            },
            "after": [
              {
                "result": {
                  "duration": 3679900,
                  "status": "passed"
                },
                "match": {
                  "location": "Base.waitToPageRender(Scenario)"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 10098636800,
              "status": "passed"
            },
            "line": 110,
            "name": "confirmation message get display as \"PAYMENT CONFIRMATION\"",
            "match": {
              "arguments": [
                {
                  "val": "\"PAYMENT CONFIRMATION\"",
                  "offset": 36
                }
              ],
              "location": "USAMobileNoMandate.confirmation_message_get_display_as(String)"
            },
            "after": [
              {
                "result": {
                  "duration": 5883100,
                  "status": "passed"
                },
                "match": {
                  "location": "Base.waitToPageRender(Scenario)"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 143700,
              "status": "passed"
            },
            "line": 112,
            "name": "user click on login button",
            "match": {
              "location": "USAMobileNoMandate.user_click_on_login_button()"
            },
            "after": [
              {
                "result": {
                  "duration": 4420900,
                  "status": "passed"
                },
                "match": {
                  "location": "Base.waitToPageRender(Scenario)"
                }
              }
            ],
            "keyword": "Then "
          },
          {
            "result": {
              "duration": 171700,
              "status": "passed"
            },
            "line": 113,
            "name": "enter the User name as \"sid87@mailinator.com\"",
            "match": {
              "arguments": [
                {
                  "val": "\"sid87@mailinator.com\"",
                  "offset": 23
                }
              ],
              "location": "AutoRenewal.enter_the_User_name_as(String)"
            },
            "after": [
              {
                "result": {
                  "duration": 4400600,
                  "status": "passed"
                },
                "match": {
                  "location": "Base.waitToPageRender(Scenario)"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "duration": 175000,
              "status": "passed"
            },
            "line": 114,
            "name": "enter the Password as\"Malin@555\"",
            "match": {
              "arguments": [
                {
                  "val": "\"Malin@555\"",
                  "offset": 21
                }
              ],
              "location": "AutoRenewal.enter_the_Password_as(String)"
            },
            "after": [
              {
                "result": {
                  "duration": 3947400,
                  "status": "passed"
                },
                "match": {
                  "location": "Base.waitToPageRender(Scenario)"
                }
              }
            ],
            "keyword": "When "
          },
          {
            "result": {
              "error_message": "org.openqa.selenium.TimeoutException: Expected condition failed: waiting for element to be clickable: Proxy element for: DefaultElementLocator \u0027By.xpath: //button[text()\u003d\u0027Login\u0027]\u0027 (tried for 30 second(s) with 500 milliseconds interval)\r\n\tat org.openqa.selenium.support.ui.WebDriverWait.timeoutException(WebDriverWait.java:138)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:231)\r\n\tat framework.Waits.waitUntilElementToClick(Waits.java:49)\r\n\tat stepDefinitions.AutoRenewal.user_click_on_the_Login_Button(AutoRenewal.java:73)\r\n\tat ✽.user click on the Login Button(file:src/test/resources/Feature/Dashboard.feature:115)\r\nCaused by: org.openqa.selenium.NoSuchElementException: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//button[text()\u003d\u0027Login\u0027]\"}\n  (Session info: chrome\u003d105.0.5195.128)\nFor documentation on this error, please visit: https://selenium.dev/exceptions/#no_such_element\nBuild info: version: \u00274.1.1\u0027, revision: \u0027e8fcc2cecf\u0027\nSystem info: host: \u0027INMH-PN-DT4253\u0027, ip: \u0027192.168.108.194\u0027, os.name: \u0027Windows 10\u0027, os.arch: \u0027amd64\u0027, os.version: \u002710.0\u0027, java.version: \u00271.8.0_202\u0027\nDriver info: org.openqa.selenium.chrome.ChromeDriver\nCommand: [9581cd1c31afc6f281268169b8cbd2b6, findElement {using\u003dxpath, value\u003d//button[text()\u003d\u0027Login\u0027]}]\nCapabilities {acceptInsecureCerts: true, browserName: chrome, browserVersion: 105.0.5195.128, chrome: {chromedriverVersion: 105.0.5195.52 (412c95e51883..., userDataDir: C:\\Users\\SIDDHA~1.IN\\AppDat...}, goog:chromeOptions: {debuggerAddress: localhost:57838}, javascriptEnabled: true, networkConnectionEnabled: false, pageLoadStrategy: normal, platform: WINDOWS, platformName: WINDOWS, proxy: Proxy(), se:cdp: ws://localhost:57838/devtoo..., se:cdpVersion: 105.0.5195.128, setWindowRect: true, strictFileInteractability: false, timeouts: {implicit: 0, pageLoad: 300000, script: 30000}, unhandledPromptBehavior: accept, webauthn:extension:credBlob: true, webauthn:extension:largeBlob: true, webauthn:virtualAuthenticators: true}\nSession ID: 9581cd1c31afc6f281268169b8cbd2b6\r\n\tat sun.reflect.GeneratedConstructorAccessor26.newInstance(Unknown Source)\r\n\tat sun.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\r\n\tat java.lang.reflect.Constructor.newInstance(Constructor.java:423)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.createException(W3CHttpResponseCodec.java:200)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:133)\r\n\tat org.openqa.selenium.remote.codec.w3c.W3CHttpResponseCodec.decode(W3CHttpResponseCodec.java:53)\r\n\tat org.openqa.selenium.remote.HttpCommandExecutor.execute(HttpCommandExecutor.java:184)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.invokeExecute(DriverCommandExecutor.java:167)\r\n\tat org.openqa.selenium.remote.service.DriverCommandExecutor.execute(DriverCommandExecutor.java:142)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.execute(RemoteWebDriver.java:543)\r\n\tat org.openqa.selenium.remote.ElementLocation$ElementFinder$2.findElement(ElementLocation.java:162)\r\n\tat org.openqa.selenium.remote.ElementLocation.findElement(ElementLocation.java:60)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:367)\r\n\tat org.openqa.selenium.remote.RemoteWebDriver.findElement(RemoteWebDriver.java:359)\r\n\tat org.openqa.selenium.support.pagefactory.DefaultElementLocator.findElement(DefaultElementLocator.java:70)\r\n\tat org.openqa.selenium.support.pagefactory.internal.LocatingElementHandler.invoke(LocatingElementHandler.java:39)\r\n\tat com.sun.proxy.$Proxy38.isDisplayed(Unknown Source)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions.elementIfVisible(ExpectedConditions.java:307)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions.access$000(ExpectedConditions.java:40)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:293)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$10.apply(ExpectedConditions.java:290)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:660)\r\n\tat org.openqa.selenium.support.ui.ExpectedConditions$23.apply(ExpectedConditions.java:656)\r\n\tat org.openqa.selenium.support.ui.FluentWait.until(FluentWait.java:208)\r\n\tat framework.Waits.waitUntilElementToClick(Waits.java:49)\r\n\tat stepDefinitions.AutoRenewal.user_click_on_the_Login_Button(AutoRenewal.java:73)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)\r\n\tat sun.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:62)\r\n\tat sun.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43)\r\n\tat java.lang.reflect.Method.invoke(Method.java:498)\r\n\tat cucumber.runtime.Utils$1.call(Utils.java:26)\r\n\tat cucumber.runtime.Timeout.timeout(Timeout.java:16)\r\n\tat cucumber.runtime.Utils.invoke(Utils.java:20)\r\n\tat cucumber.runtime.java.JavaStepDefinition.execute(JavaStepDefinition.java:57)\r\n\tat cucumber.runner.PickleStepDefinitionMatch.runStep(PickleStepDefinitionMatch.java:50)\r\n\tat cucumber.runner.TestStep.executeStep(TestStep.java:65)\r\n\tat cucumber.runner.TestStep.run(TestStep.java:50)\r\n\tat cucumber.runner.PickleStepTestStep.run(PickleStepTestStep.java:43)\r\n\tat cucumber.runner.TestCase.run(TestCase.java:46)\r\n\tat cucumber.runner.Runner.runPickle(Runner.java:50)\r\n\tat io.cucumber.junit.PickleRunners$NoStepDescriptions.run(PickleRunners.java:146)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:68)\r\n\tat io.cucumber.junit.FeatureRunner.runChild(FeatureRunner.java:23)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:144)\r\n\tat io.cucumber.junit.Cucumber.runChild(Cucumber.java:65)\r\n\tat org.junit.runners.ParentRunner$4.run(ParentRunner.java:331)\r\n\tat org.junit.runners.ParentRunner$1.schedule(ParentRunner.java:79)\r\n\tat org.junit.runners.ParentRunner.runChildren(ParentRunner.java:329)\r\n\tat org.junit.runners.ParentRunner.access$100(ParentRunner.java:66)\r\n\tat org.junit.runners.ParentRunner$2.evaluate(ParentRunner.java:293)\r\n\tat io.cucumber.junit.Cucumber$RunCucumber.evaluate(Cucumber.java:174)\r\n\tat org.junit.runners.ParentRunner$3.evaluate(ParentRunner.java:306)\r\n\tat org.junit.runners.ParentRunner.run(ParentRunner.java:413)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:137)\r\n\tat org.junit.runner.JUnitCore.run(JUnitCore.java:115)\r\n\tat org.junit.vintage.engine.execution.RunnerExecutor.execute(RunnerExecutor.java:42)\r\n\tat org.junit.vintage.engine.VintageTestEngine.executeAllChildren(VintageTestEngine.java:80)\r\n\tat org.junit.vintage.engine.VintageTestEngine.execute(VintageTestEngine.java:72)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:107)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:88)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.lambda$execute$0(EngineExecutionOrchestrator.java:54)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.withInterceptedStreams(EngineExecutionOrchestrator.java:67)\r\n\tat org.junit.platform.launcher.core.EngineExecutionOrchestrator.execute(EngineExecutionOrchestrator.java:52)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:114)\r\n\tat org.junit.platform.launcher.core.DefaultLauncher.execute(DefaultLauncher.java:95)\r\n\tat org.junit.platform.launcher.core.DefaultLauncherSession$DelegatingLauncher.execute(DefaultLauncherSession.java:91)\r\n\tat org.junit.platform.launcher.core.SessionPerRequestLauncher.execute(SessionPerRequestLauncher.java:60)\r\n\tat org.eclipse.jdt.internal.junit5.runner.JUnit5TestReference.run(JUnit5TestReference.java:98)\r\n\tat org.eclipse.jdt.internal.junit.runner.TestExecution.run(TestExecution.java:40)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:529)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.runTests(RemoteTestRunner.java:756)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.run(RemoteTestRunner.java:452)\r\n\tat org.eclipse.jdt.internal.junit.runner.RemoteTestRunner.main(RemoteTestRunner.java:210)\r\n",
              "duration": 35065887400,
              "status": "failed"
            },
            "line": 115,
            "name": "user click on the Login Button",
            "match": {
              "location": "AutoRenewal.user_click_on_the_Login_Button()"
            },
            "after": [
              {
                "result": {
                  "duration": 7501900,
                  "status": "passed"
                },
                "match": {
                  "location": "Base.waitToPageRender(Scenario)"
                }
              }
            ],
            "keyword": "And "
          },
          {
            "result": {
              "duration": 3959400,
              "status": "skipped"
            },
            "line": 116,
            "name": "new plan details and its related features should get Displayed",
            "match": {
              "location": "Dashboard.new_plan_details_and_its_related_features_should_get_Displayed(DataTable)"
            },
            "after": [
              {
                "result": {
                  "duration": 156700,
                  "status": "skipped"
                },
                "match": {
                  "location": "Base.waitToPageRender(Scenario)"
                }
              }
            ],
            "rows": [
              {
                "cells": [
                  "600"
                ]
              }
            ],
            "keyword": "Then "
          }
        ],
        "tags": [
          {
            "name": "@Dashboard"
          },
          {
            "name": "@DrySign15"
          }
        ]
      }
    ],
    "name": "To Verify Dashboard",
    "description": "",
    "id": "to-verify-dashboard",
    "keyword": "Feature",
    "uri": "file:src/test/resources/Feature/Dashboard.feature",
    "tags": [
      {
        "name": "@Dashboard",
        "type": "Tag",
        "location": {
          "line": 1,
          "column": 1
        }
      }
    ]
  }
]